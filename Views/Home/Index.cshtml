@using System.Globalization
@using Microsoft.Extensions.Configuration
@using Triton.Core
@model Triton.Model.CRM.Custom.CSADashboardModel
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Triton Express";
    Layout = "_Layout";

    //var textInfo = new CultureInfo("en-US", false).TextInfo;
}

@functions{
    private void RenderList(string category, int value, string color, string url)
    {
        <li class="list-group-item">
            <div class="media">

                <!-- Avatar -->
                <div class="avatar avatar-@color avatar-sm avatar-circle mr-3">
                    <span class="avatar-initials">@category.Substring(0, 1)</span>
                </div>
                <!-- End Avatar -->

                <div class="media-body">
                    <div class="row">
                        <div class="col-7 col-md-5 order-md-1">
                            @*<h5 class="mb-0">@category</h5>*@
                            <span class="font-size-sm">@category</span>
                        </div>

                        <div class="col-5 col-md-4 order-md-3 text-right mt-2 mt-md-0">
                            <a class="btn btn-sm btn-white" href="@url">
                                <i class="tio-receipt-outlined mr-1"></i> View
                            </a>
                        </div>

                        <div class="col-auto col-md-3 order-md-2">
                            <span class="badge badge-soft-primary badge-pill">@value</span>
                        </div>
                    </div>
                    <!-- End Row -->
                </div>
            </div>
        </li>
    }
}
<main id="content" role="main" class="main pointer-event">
    <!-- Content -->
    <div class="content container-fluid">
        <!-- Page Header -->
        <div class="page-header">
            <div class="row align-items-center">
                <div class="col-sm mb-2 mb-sm-0">
                    <h1 class="page-header-title">Dashboard</h1>
                </div>

                @*<div class="col-sm-auto">
                        <a class="btn btn-primary" href="javascript:;" data-toggle="modal" data-target="#inviteUserModal">
                            <i class="far fa-file-search"></i> Search waybill
                        </a>
                    </div>*@
            </div>
        </div>
        <!-- End Page Header -->
        @if (Model.CustomerDeliveredChart == "0")
        {
            <div class="content container-fluid">
                <div class="row justify-content-sm-center text-center py-10">
                    <div class="col-sm-7 col-md-5">
                        <img class="img-fluid mb-5" src="~/front-dashboard-v1.1/src/assets/svg/illustrations/graphs.svg" alt="Image Description" style="max-width: 21rem;">
                        <h1>Welcome @User.FindFirst("FullName").Value, nice to see you!</h1>
                        <p>There are no deliveries to display on the dasboard</p>
                    </div>
                </div>
                <!-- End Row -->
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-sm-6 col-lg-3 mb-3 mb-lg-6">
                    <!-- Card -->
                    <div class="card card-sm">
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <!-- Media -->
                                    <div class="media">
                                        <i class="far fa-tachometer-alt-fastest nav-icon"></i>

                                        <div class="media-body">
                                            <h4 class="mb-1">Total deliveries</h4>
                                            <span class="d-block">@Model.DeliveryStatusCount.ExpectedForToday</span>
                                        </div>
                                    </div>
                                    <!-- End Media -->
                                </div>

                                <div class="col-auto">
                                    <!-- Circle -->
                                    <div class="js-circle" data-hs-circles-options="{
                           &quot;value&quot;: 100,
                           &quot;maxValue&quot;: 100,
                           &quot;duration&quot;: 2000,
                           &quot;isViewportInit&quot;: true,
                           &quot;colors&quot;: [&quot;#e7eaf3&quot;, &quot;#377dff&quot;],
                           &quot;radius&quot;: 25,
                           &quot;width&quot;: 3,
                           &quot;fgStrokeLinecap&quot;: &quot;round&quot;,
                           &quot;textFontSize&quot;: 14,
                           &quot;additionalText&quot;: &quot;%&quot;,
                           &quot;textClass&quot;: &quot;circle-custom-text&quot;,
                           &quot;textColor&quot;: &quot;#377dff&quot;
                         }" id="circle-29259491471579446"><div class="circles-wrap" style="position: relative; display: inline-block;"><svg xmlns="http://www.w3.org/2000/svg" width="50" height="50"><path fill="transparent" stroke="#e7eaf3" stroke-width="3" d="M 24.995213679713164 1.5000004874226 A 23.5 23.5 0 1 1 24.96735897145532 1.5000226688778362 Z" class="circles-maxValueStroke"></path><path fill="transparent" stroke="#377dff" stroke-width="3" d="M 24.995213679713164 1.5000004874226 A 23.5 23.5 0 1 1 19.181369552928786 47.768257283341114 " class="circles-valueStroke" stroke-linecap="round"></path></svg><div class="circle-custom-text" style="position: absolute; text-align: center; width: 100%; font-size: 14px; height: auto; line-height: normal; color: rgb(55, 125, 255);">54%</div></div></div>
                                    <!-- End Circle -->
                                </div>
                            </div>
                            <!-- End Row -->
                        </div>
                    </div>
                    <!-- End Card -->
                </div>

                <div class="col-sm-6 col-lg-3 mb-3 mb-lg-6">
                    <!-- Card -->
                    <div class="card card-sm">
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <!-- Media -->
                                    <div class="media">
                                        <i class="far fa-check-circle nav-icon"></i>

                                        <div class="media-body">
                                            <h4 class="mb-1">Delivered</h4>
                                            <span class="font-size-sm text-success">
                                                <i class="tio-trending-up"></i> @Model.DeliveryStatusCount.Delivered
                                            </span>
                                        </div>
                                    </div>
                                    <!-- End Media -->
                                </div>

                                <div class="col-auto">
                                    <!-- Circle -->
                                    <div class="js-circle" data-hs-circles-options="{
                           &quot;value&quot;: @Model.DeliveryStatusCount.PercDelivered,
                           &quot;maxValue&quot;: 100,
                           &quot;duration&quot;: 2000,
                           &quot;isViewportInit&quot;: true,
                           &quot;colors&quot;: [&quot;#e7eaf3&quot;, &quot;#377dff&quot;],
                           &quot;radius&quot;: 25,
                           &quot;width&quot;: 3,
                           &quot;fgStrokeLinecap&quot;: &quot;round&quot;,
                           &quot;textFontSize&quot;: 14,
                           &quot;additionalText&quot;: &quot;%&quot;,
                           &quot;textClass&quot;: &quot;circle-custom-text&quot;,
                           &quot;textColor&quot;: &quot;#377dff&quot;
                         }" id="circle-23325753447640118"><div class="circles-wrap" style="position: relative; display: inline-block;"><svg xmlns="http://www.w3.org/2000/svg" width="50" height="50"><path fill="transparent" stroke="#e7eaf3" stroke-width="3" d="M 24.995213679713164 1.5000004874226 A 23.5 23.5 0 1 1 24.96735897145532 1.5000226688778362 Z" class="circles-maxValueStroke"></path><path fill="transparent" stroke="#377dff" stroke-width="3" d="M 24.995213679713164 1.5000004874226 A 23.5 23.5 0 1 1 2.6447178259358317 17.754907942754013 " class="circles-valueStroke" stroke-linecap="round"></path></svg><div class="circle-custom-text" style="position: absolute; text-align: center; width: 100%; font-size: 14px; height: auto; line-height: normal; color: rgb(55, 125, 255);">80%</div></div></div>
                                    <!-- End Circle -->
                                </div>
                            </div>
                            <!-- End Row -->
                        </div>
                    </div>
                    <!-- End Card -->
                </div>

                <div class="col-sm-6 col-lg-3 mb-3 mb-lg-6">
                    <!-- Card -->
                    <div class="card card-sm">
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <!-- Media -->
                                    <div class="media">
                                        <i class="far fa-exclamation-circle nav-icon"></i>

                                        <div class="media-body">
                                            <h4 class="mb-1">Outstanding</h4>
                                            <span class="d-block">@Model.DeliveryStatusCount.OutstandingToday</span>
                                        </div>
                                    </div>
                                    <!-- End Media -->
                                </div>

                                <div class="col-auto">
                                    <!-- Circle -->
                                    <div class="js-circle" data-hs-circles-options="{
                           &quot;value&quot;: @Model.DeliveryStatusCount.PercOutstanding,
                           &quot;maxValue&quot;: 100,
                           &quot;duration&quot;: 2000,
                           &quot;isViewportInit&quot;: true,
                           &quot;colors&quot;: [&quot;#e7eaf3&quot;, &quot;#377dff&quot;],
                           &quot;radius&quot;: 25,
                           &quot;width&quot;: 3,
                           &quot;fgStrokeLinecap&quot;: &quot;round&quot;,
                           &quot;textFontSize&quot;: 14,
                           &quot;additionalText&quot;: &quot;%&quot;,
                           &quot;textClass&quot;: &quot;circle-custom-text&quot;,
                           &quot;textColor&quot;: &quot;#377dff&quot;
                         }" id="circle-9954727364351017"><div class="circles-wrap" style="position: relative; display: inline-block;"><svg xmlns="http://www.w3.org/2000/svg" width="50" height="50"><path fill="transparent" stroke="#e7eaf3" stroke-width="3" d="M 24.995213679713164 1.5000004874226 A 23.5 23.5 0 1 1 24.96735897145532 1.5000226688778362 Z" class="circles-maxValueStroke"></path><path fill="transparent" stroke="#377dff" stroke-width="3" d="M 24.995213679713164 1.5000004874226 A 23.5 23.5 0 1 1 4.417419434000195 36.340519266952775 " class="circles-valueStroke" stroke-linecap="round"></path></svg><div class="circle-custom-text" style="position: absolute; text-align: center; width: 100%; font-size: 14px; height: auto; line-height: normal; color: rgb(55, 125, 255);">67%</div></div></div>
                                    <!-- End Circle -->
                                </div>
                            </div>
                            <!-- End Row -->
                        </div>
                    </div>
                    <!-- End Card -->
                </div>

                <div class="col-sm-6 col-lg-3 mb-3 mb-lg-6">
                    <!-- Card -->
                    <div class="card card-sm">
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <!-- Media -->
                                    <div class="media">
                                        <i class="far fa-siren-on nav-icon"></i>

                                        <div class="media-body">
                                            <h4 class="mb-1">Late</h4>
                                            <span class="d-block">@Model.DeliveryStatusCount.Failed</span>
                                        </div>
                                    </div>
                                    <!-- End Media -->
                                </div>

                                <div class="col-auto">
                                    <!-- Circle -->
                                    <div class="js-circle" data-hs-circles-options="{
                           &quot;value&quot;: @Model.DeliveryStatusCount.PercFailed,
                           &quot;maxValue&quot;: 100,
                           &quot;duration&quot;: 2000,
                           &quot;isViewportInit&quot;: true,
                           &quot;colors&quot;: [&quot;#e7eaf3&quot;, &quot;#377dff&quot;],
                           &quot;radius&quot;: 25,
                           &quot;width&quot;: 3,
                           &quot;fgStrokeLinecap&quot;: &quot;round&quot;,
                           &quot;textFontSize&quot;: 14,
                           &quot;additionalText&quot;: &quot;%&quot;,
                           &quot;textClass&quot;: &quot;circle-custom-text&quot;,
                           &quot;textColor&quot;: &quot;#377dff&quot;
                         }" id="circle-7665100103984883"><div class="circles-wrap" style="position: relative; display: inline-block;"><svg xmlns="http://www.w3.org/2000/svg" width="50" height="50"><path fill="transparent" stroke="#e7eaf3" stroke-width="3" d="M 24.995213679713164 1.5000004874226 A 23.5 23.5 0 1 1 24.96735897145532 1.5000226688778362 Z" class="circles-maxValueStroke"></path><path fill="transparent" stroke="#377dff" stroke-width="3" d="M 24.995213679713164 1.5000004874226 A 23.5 23.5 0 0 1 37.61790454955983 44.82519822796729 " class="circles-valueStroke" stroke-linecap="round"></path></svg><div class="circle-custom-text" style="position: absolute; text-align: center; width: 100%; font-size: 14px; height: auto; line-height: normal; color: rgb(55, 125, 255);">41%</div></div></div>
                                    <!-- End Circle -->
                                </div>
                            </div>
                            <!-- End Row -->
                        </div>
                    </div>
                    <!-- End Card -->
                </div>
            </div>


            <div class="row gx-2 gx-lg-3">
                <div class="col-lg-5 mb-3 mb-lg-5">
                    <!-- Card -->
                    <div class="card h-100">
                        <!-- Header -->
                        <div class="card-header">
                            <h5 class="card-header-title">Category overview</h5>
                        </div>
                        <!-- End Header -->
                        <!-- Body -->
                        <div class="card-body">
                            <span class="h1 d-block mb-4">@Model.TotalSubCategories deliveries</span>

                            <!-- Progress -->
                            <div class="progress rounded-pill mb-2">
                                <div class="progress-bar" role="progressbar" style="width: @Model.DeliveryStatusCount.Bookings%" aria-valuenow="@Model.DeliveryStatusCount.Bookings" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="top" title="" data-original-title="Bookings"></div>
                                <div class="progress-bar opacity" role="progressbar" style="width: @Model.DeliveryStatusCount.Depot%" aria-valuenow="@Model.DeliveryStatusCount.Depot" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="top" title="" data-original-title="Depot"></div>
                                @*<div class="progress-bar opacity-xs" role="progressbar" style="width: @Model.DeliveryStatusCount.PreviouslyDelivered%" aria-valuenow="@Model.DeliveryStatusCount.PreviouslyDelivered" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="top" title="" data-original-title="Delivered Early"></div>*@
                                <div class="progress-bar bg-warning" role="progressbar" style="width: @Model.DeliveryStatusCount.FutureDel%" aria-valuenow="@Model.DeliveryStatusCount.FutureDel" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="top" title="" data-original-title="Forthcoming Deliveries"></div>
                                <div class="progress-bar bg-danger opacity" role="progressbar" style="width: @Model.DeliveryStatusCount.PreviouslyUndelivered%" aria-valuenow="@Model.DeliveryStatusCount.PreviouslyUndelivered" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="top" title="" data-original-title="Previously not delivered"></div>
                                <div class="progress-bar bg-danger opacity-xs" role="progressbar" style="width: @Model.DeliveryStatusCount.Retained%" aria-valuenow="@Model.DeliveryStatusCount.Retained" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="top" title="" data-original-title="Retained"></div>
                            </div>

                            <div class="d-flex justify-content-between mb-4">
                                <span>0%</span>
                                <span>100%</span>
                            </div>
                            <!-- End Progress -->
                            <!-- Table -->
                            <!-- Body -->
                            <ul class="list-group list-group-flush list-group-no-gutters">
                                @{
                                    RenderList("Booking", Model.DeliveryStatusCount.Bookings, "primary", Url.Action("WaybillListCategory", "Waybill", new { customerId = User.GetCustomerIds(), type = "Bookings", totalWaybills = Model.DeliveryStatusCount.ExpectedForToday }));
                                    RenderList("Depot", Model.DeliveryStatusCount.Depot, "primary opacity", Url.Action("WaybillListCategory", "Waybill", new { customerId = User.GetCustomerIds(), type = "Depot", totalWaybills = Model.DeliveryStatusCount.ExpectedForToday }));
                                    //RenderList("Delivered Early", Model.DeliveryStatusCount.PreviouslyDelivered, "primary opacity-xs", Url.Action("WaybillListCategory", "Waybill", new { customerId = User.GetCustomerIds(), type = "PrevDel", totalWaybills = Model.DeliveryStatusCount.ExpectedForToday }));
                                    RenderList("Forthcoming deliveries", Model.DeliveryStatusCount.FutureDel, "danger opacity-xs", Url.Action("WaybillListCategory", "Waybill", new { customerId = User.GetCustomerIds(), type = "FutureDel", totalWaybills = Model.DeliveryStatusCount.ExpectedForToday }));
                                    //RenderList("In Transit", Model.DeliveryStatusCount.InTransit, "warning", Url.Action("WaybillListCategory", "Waybill", new { customerId = User.GetCustomerIds(), type = "InTransit", totalWaybills = Model.DeliveryStatusCount.ExpectedForToday }));
                                    RenderList("Previously not delivered", Model.DeliveryStatusCount.PreviouslyUndelivered, "danger opacity", Url.Action("WaybillListCategory", "Waybill", new { customerId = User.GetCustomerIds(), type = "NotDelivered", totalWaybills = Model.DeliveryStatusCount.ExpectedForToday }));
                                    RenderList("Retained", Model.DeliveryStatusCount.Retained, "danger opacity-xs", Url.Action("WaybillListCategory", "Waybill", new { customerId = User.GetCustomerIds(), type = "RetainedFreightForToday", totalWaybills = Model.DeliveryStatusCount.ExpectedForToday }));
                                }
                            </ul>

                            <!-- End Body -->
                            <!--<div class="table-responsive">
                            <table class="table table-lg table-nowrap card-table mb-0">
                            <tbody>
                            <tr>
                                <th scope="row">
                                    <span class="legend-indicator bg-primary"></span>Bookings
                                </th>
                                <td>
                                    <span class="badge badge-soft-primary">@Model.DeliveryStatusCount.Bookings</span>
                                </td>
                            </tr>

                            <tr>
                                <th scope="row">
                                    <span class="legend-indicator bg-primary opacity"></span>Depot
                                </th>
                                <td>
                                    <span class="badge badge-soft-primary">@Model.DeliveryStatusCount.Depot</span>
                                </td>
                            </tr>

                            <tr>
                                <th scope="row">
                                    <span class="legend-indicator bg-primary opacity-xs"></span>Delivered Early
                                </th>
                                <td>
                                    <span class="badge badge-soft-primary">@Model.DeliveryStatusCount.PreviouslyDelivered</span>
                                </td>
                            </tr>

                            <tr>
                                <th scope="row">
                                    <span class="legend-indicator bg-warning"></span>Forthcoming Deliveries
                                </th>
                                <td>
                                    <span class="badge badge-soft-warning">@Model.DeliveryStatusCount.FutureDel</span>
                                </td>
                            </tr>

                            <tr>
                            <th scope="row">
                                <span class="legend-indicator bg-danger opacity"></span>Previously not delivered
                            </th>-->
                            @*<td>@Model.DeliveryStatusCount.PreviouslyUndelivered</td>*@
                            <!--<td>
                                <span class="badge badge-soft-danger">@Model.DeliveryStatusCount.PreviouslyUndelivered</span>
                            </td>
                            </tr>

                            <tr>
                            <th scope="row">
                                <span class="legend-indicator bg-danger opacity-xs"></span>Retained
                            </th>-->
                            @*<td>@Model.DeliveryStatusCount.Retained</td>*@
                            <!--<td>
                                <span class="badge badge-danger-success">@Model.DeliveryStatusCount.Retained</span>
                            </td>
                            </tr>
                            </tbody>
                            </table>
                            </div>-->
                            <!-- End Table -->
                        </div>
                        <!-- End Body -->
                    </div>
                    <!-- End Card -->
                </div>
                <div class="col-lg-7 mb-3 mb-lg-5" id="DeliveryChartPanel">
                    <!-- Card -->
                        <div class="card h-100">
                            <!-- Header -->
                            <div class="card-header">
                                <h5 class="card-header-title">Delivery Chart</h5>
                            </div>
                            <!-- End Header -->
                            <!-- Body -->
                            <div class="card-body">
                                <div class="row mb-4">
                                    @*<div class="col-sm mb-2 mb-sm-0">
                            <div class="d-flex align-items-center">
                                <span class="h1 mb-0">35%</span>
                                <span class="text-success ml-2">
                                    <i class="tio-trending-up"></i> 25.3%
                                </span>
                            </div>
                        </div>*@

                                    <div class="col-sm-auto align-self-sm-end">
                                        <!-- Legend Indicators -->
                                        <div class="row font-size-sm">
                                            <div class="col-auto">
                                                <span class="legend-indicator bg-primary"></span> Delivered
                                            </div>
                                            <div class="col-auto">
                                                <span class="legend-indicator bg-danger"></span> Outstanding
                                            </div>
                                        </div>
                                        <!-- End Legend Indicators -->
                                    </div>
                                </div>
                                <!-- End Row -->
                                <!-- Bar Chart -->
                                <div class="chartjs-custom">
                                    <canvas id="updatingData" style="height: 20rem;"
                                            data-hs-chartjs-options='{
                            "type": "bar",
                            "data": {
                              "labels": [@Model.CustomerNameChart],
                              "datasets": [{
                                "data": [@Model.CustomerDeliveredChart],
                                "backgroundColor": "#377dff",
                                "hoverBackgroundColor": "#377dff",
                                "borderColor": "#377dff"
                              },
                              {
                                "data": [@Model.CustomerOutstandingChart],
                                "backgroundColor": "#ED4C78",
                                "borderColor": "#e7eaf3"
                              }]
                            },
                            "options": {
                              "scales": {
                                "yAxes": [{
                                  "gridLines": {
                                    "color": "#e7eaf3",
                                    "drawBorder": false,
                                    "zeroLineColor": "#e7eaf3"
                                  },
                                  "ticks": {
                                    "beginAtZero": true,
                                    "stepSize": 10,
                                    "fontSize": 12,
                                    "fontColor": "#97a4af",
                                    "fontFamily": "Open Sans, sans-serif",
                                    "padding": 10
                                  }
                                }],
                                "xAxes": [{
                                  "gridLines": {
                                    "display": false,
                                    "drawBorder": false
                                  },
                                  "ticks": {
                                    "fontSize": 12,
                                    "fontColor": "#97a4af",
                                    "fontFamily": "Open Sans, sans-serif",
                                    "padding": 5
                                  },
                                  "dataset.categoryPercentage": 0.5,
                                  "dataset.maxBarThickness": "20"
                                }]
                              },
                              "cornerRadius": 2,
                              "tooltips": {
                                "hasIndicator": true,
                                "mode": "index",
                                "intersect": false
                              },
                              "hover": {
                                "mode": "nearest",
                                "intersect": true
                              }
                            }
                          }'></canvas>
                                </div>
                                <!-- End Bar Chart -->
                            </div>
                            <!-- End Body -->
                        </div>
                </div>
            </div>
            <!-- End Row -->
            <!-- Card -->
            <div class="row">
                <div class="col-md-4">
                    <div class="card mb-3 mb-lg-5">
                        <!-- Header -->
                        <div class="card-header">
                            <div class="row justify-content-between align-items-center flex-grow-1">
                                <div class="col-md-4 mb-3 mb-md-0">
                                    Queries / Watch list
                                </div>
                            </div>
                            <!-- End Row -->
                        </div>
                        @if (Model.WaybillQueryList != null)
                        {
                            <ul class="list-group">
                                <!-- List Item -->
                                @foreach (var item in Model.WaybillQueryList)
                                {
                                    var type = "success";
                                    type = item.WaybillQueryMaster.QueryStatusLCID == 251 ? "Query" : "Watch";
                                    <li class="list-group-item">
                                        <div class="row align-items-center gx-2">
                                            <div class="col-auto">
                                                <div class="avatar avatar-sm avatar-soft-@(item.WaybillQueryMaster.QueryStatusLCID == 251 ? "warning" : "info") avatar-circle mr-2">
                                                    <span class="avatar-initials">@type.Substring(0, 1)</span>
                                                </div>
                                            </div>

                                            <div class="col">
                                                <h5 class="mb-0">
                                                    <a class="text-dark" href="#">@item.Waybills.WaybillNo</a>
                                                </h5>
                                                <ul class="list-inline list-separator small">
                                                    <li class="list-inline-item">Created on:  @item.WaybillQueryMaster.CreatedOn.ToString("dd MMMM yyyy hh:mm tt")</li>
                                                </ul>
                                            </div>

                                            <div class="col-auto">
                                                <a class="btn btn-sm btn-white" href="@Url.Action("Info", "Waybill", new { item.Waybills.WaybillID })">
                                                    <i class="tio-receipt-outlined mr-1"></i> View
                                                </a>
                                            </div>
                                        </div>
                                        <!-- End Row -->
                                    </li>

                                }
                                <!-- End List Item -->
                            </ul>
                        }
                        else
                        {
                            <div class="card-body text-center">
                                <i class="fal fa-question fa-4x"></i>
                            </div>
                            <div class="card-body text-center">
                                <h5 class="card-title">No Queries</h5>
                                <p class="small">&nbsp;</p>
                            </div>
                        }

                    </div>
                </div>

                <div class="col-md-8">
                    <div class="card mb-3 mb-lg-5">
                        <!-- Header -->
                        <div class="card-header">
                            <div class="row justify-content-between align-items-center flex-grow-1">
                                <div class="col-md-4 mb-3 mb-md-0">
                                    <form>
                                        <!-- Search -->
                                        <div class="input-group input-group-merge input-group-flush">
                                            <div class="input-group-prepend">
                                                <div class="input-group-text">
                                                    <i class="tio-search"></i>
                                                </div>
                                            </div>
                                            <input id="datatableSearch" type="search" class="form-control" placeholder="Search" aria-label="Search">
                                        </div>
                                        <!-- End Search -->
                                    </form>
                                </div>
                            </div>
                            <!-- End Row -->
                        </div>
                        <!-- End Header -->
                        <!-- Table -->
                        <div class="table-responsive datatable-custom">
                            <table id="datatable" class="table table-borderless table-thead-bordered table-nowrap table-align-middle card-table"
                                   data-hs-datatables-options='{
                     "order": [],
                     "info": {
                       "totalQty": "#datatableWithPaginationInfoTotalQty"
                     },
                     "search": "#datatableSearch",
                     "entries": "#datatableEntries",
                     "pageLength": 8,
                     "isResponsive": false,
                     "isShowPaging": false,
                     "pagination": "datatablePagination"
                   }'>
                                <thead class="thead-light">
                                    <tr>
                                        <th>Account</th>
                                        <th>Due Today</th>
                                        <th>Delivered</th>
                                        <th>Outstanding</th>
                                        <th>Completion</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @foreach (var item in Model.CustomerDeliveryList)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center" href="#">
                                                    <div class="avatar avatar-soft-primary avatar-circle">
                                                        <span class="avatar-initials">@item.CustomerName.Substring(0, 1)</span>
                                                    </div>
                                                    <div class="ml-3">
                                                        <span class="d-block h5 text-hover-primary mb-0">@item.CustomerName</span>
                                                        <span class="d-block font-size-sm text-body">@item.AccountCode</span>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <a class="text-body" href="@Url.Action("WaybillListCategory", "Waybill", new { item.CustomerID, type="DueToday", totalWaybills=Model.DeliveryStatusCount.ExpectedForToday })">
                                                    <u>@item.DueToday</u>
                                                </a>
                                            </td>
                                            <td>
                                                <a class="text-body" href="@Url.Action("WaybillListCategory", "Waybill", new { item.CustomerID, type="Delivered", totalWaybills=Model.DeliveryStatusCount.ExpectedForToday })">
                                                    <u>@item.Delivered</u>
                                                </a>
                                            </td>
                                            <td>
                                                <a class="text-body text-center" href="@Url.Action("WaybillListCategory", "Waybill", new { item.CustomerID, type="OutStanding", totalWaybills=Model.DeliveryStatusCount.ExpectedForToday })">
                                                    <u>@item.Outstanding</u>
                                                </a>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (item.Delivered != 0)
                                                    {
                                                        var percentage = Decimal.Round((decimal.Parse(item.Delivered.ToString()) / decimal.Parse(item.DueToday.ToString())) * 100);
                                                        <span class="font-size-sm mr-2">@percentage%</span>
                                                        <div class="progress table-progress">

                                                            <div class="progress-bar bg-success" role="progressbar" style="width: @percentage%" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100"></div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <span class="font-size-sm mr-2">0%</span>
                                                        <div class="progress table-progress">

                                                            <div class="progress-bar bg-success" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                                        </div>
                                                    }
                                                </div>
                                            </td>
                                            @*<td>
                                                    <a class="btn btn-sm btn-white" href="javascript:;" data-toggle="modal" data-target="#invoiceReceiptModal">
                                                        <i class="tio-receipt-outlined mr-1"></i> View
                                                    </a>
                                                </td>*@
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        </div>
                        <!-- End Table -->
                        <!-- Footer -->
                        <div class="card-footer">
                            <!-- Pagination -->
                            <div class="row justify-content-center justify-content-sm-between align-items-sm-center">
                                <div class="col-sm mb-2 mb-sm-0">
                                    <div class="d-flex justify-content-center justify-content-sm-start align-items-center">
                                        <span class="mr-2">Showing:</span>

                                        <!-- Select -->
                                        <select id="datatableEntries" class="js-select2-custom"
                                                data-hs-select2-options='{
                            "minimumResultsForSearch": "Infinity",
                            "customClass": "custom-select custom-select-sm custom-select-borderless",
                            "dropdownAutoWidth": true,
                            "width": true
                          }'>
                                            <option value="4">4</option>
                                            <option value="6">6</option>
                                            <option value="8" selected>8</option>
                                            <option value="12">12</option>
                                        </select>
                                        <!-- End Select -->

                                        <span class="text-secondary mr-2">of</span>

                                        <!-- Pagination Quantity -->
                                        <span id="datatableWithPaginationInfoTotalQty"></span>
                                    </div>
                                </div>

                                <div class="col-sm-auto">
                                    <div class="d-flex justify-content-center justify-content-sm-end">
                                        <!-- Pagination -->
                                        <nav id="datatablePagination" aria-label="Activity pagination"></nav>
                                    </div>
                                </div>
                            </div>
                            <!-- End Pagination -->
                        </div>
                        <!-- End Footer -->
                    </div>
                </div>

            </div>
            <!-- End Card -->
        }

    </div>
</main>
@section scripts {
    <script src="~/front-dashboard-v1.1/dist/assets/vendor/chart.js/dist/Chart.min.js"></script>
    <script src="~/front-dashboard-v1.1/src/assets/js/hs.chartjs.js"></script>
    <script src="~/front-dashboard-v1.1/dist/assets/vendor/chart.js.extensions/chartjs-extensions.js"></script>
    <script src="~/front-dashboard-v1.1/dist/assets/vendor/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.min.js"></script>

    <script>
        $(document).on('ready', function () {
            // INITIALIZATION OF CHARTJS
            // =======================================================
            Chart.plugins.unregister(ChartDataLabels);
            $('.js-chart').each(function () {
                $.HSCore.components.HSChartJS.init($(this));
            });

            var updatingChart = $.HSCore.components.HSChartJS.init($('#updatingData'));


            // INITIALIZATION OF BUBBLE CHARTJS WITH DATALABELS PLUGIN
            // =======================================================
            $('.js-chart-datalabels').each(function () {
                $.HSCore.components.HSChartJS.init($(this), {
                    plugins: [ChartDataLabels],
                    options: {
                        plugins: {
                            datalabels: {
                                anchor: function (context) {
                                    var value = context.dataset.data[context.dataIndex];
                                    return value.r < 20 ? 'end' : 'center';
                                },
                                align: function (context) {
                                    var value = context.dataset.data[context.dataIndex];
                                    return value.r < 20 ? 'end' : 'center';
                                },
                                color: function (context) {
                                    var value = context.dataset.data[context.dataIndex];
                                    return value.r < 20 ? context.dataset.backgroundColor : context.dataset.color;
                                },
                                font: function (context) {
                                    var value = context.dataset.data[context.dataIndex],
                                        fontSize = 25;

                                    if (value.r > 50) {
                                        fontSize = 35;
                                    }

                                    if (value.r > 70) {
                                        fontSize = 55;
                                    }

                                    return {
                                        weight: 'lighter',
                                        size: fontSize
                                    };
                                },
                                offset: 2,
                                padding: 0
                            }
                        }
                    },
                });
            });
        });

    </script>
}